// // layout.js
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";
// import { ToastProvider } from "@/components/ui/ToastProvider";
// import Header from "@/components/frontend/Header";
// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
// });

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({ children }) {
//   return (
//     <html lang="en">
//       <body suppressHydrationWarning={true}>
//         {/* Header fixed for all pages */}
//         <div className="fixed top-0 z-50 w-full flex justify-center bg-white/30 backdrop-blur-md">
//           <div className="relative max-w-[90%] w-full">
//             <Header />
//           </div>
//         </div>

//         {/* Padding top to avoid header overlap */}

//         <ToastProvider>{children}</ToastProvider>
//       </body>
//     </html>
//   );
// }

// layout.js (server component)
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ToastProvider } from "@/components/ui/ToastProvider";
import HeaderWrapper from "@/components/frontend/HeaderWrapper";
import FrontendLayout from "@/components/frontend/FrontendLayout";
import FooterWrapper from "@/components/frontend/FooterWrapper";
import { WishlistProvider } from "@/context/WishlistContext";

const geistSans = Geist({ variable: "--font-geist-sans", subsets: ["latin"] });
const geistMono = Geist_Mono({ variable: "--font-geist-mono" });

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  const pathname =
    typeof window !== "undefined" ? window.location.pathname : "";

  const isAdmin = pathname.startsWith("/admin");

  return (
    <html lang="en">
      <body suppressHydrationWarning={true}>
        <ToastProvider>
          <WishlistProvider>
            <HeaderWrapper />
            <FrontendLayout isAdmin={isAdmin}>{children}</FrontendLayout>

            <FooterWrapper />
          </WishlistProvider>
        </ToastProvider>
      </body>
    </html>
  );
}
